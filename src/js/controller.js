'use strict';

// –∏–º–ø–æ—Ä—Ç model
import * as model from './model.js';
// console.log('model: ', model);

//todo –∏–º–ø–æ—Ä—Ç recipeView
import recipeView from './views/recipeView.js';
// console.log('recipeView: ', recipeView);

//todo –∏–º–ø–æ—Ä—Ç searchView
import searchView from './views/searchView.js';
// console.log('searchView: ', searchView);

//todo –∏–º–ø–æ—Ä—Ç resultsView
import resultsView from './views/resultsView.js';
// console.log('resultsView: ', resultsView);

//todo –∏–º–ø–æ—Ä—Ç paginationView
import paginationView from './views/paginationView.js';
// console.log('paginationView: ', paginationView);

//todo –∏–º–ø–æ—Ä—Ç bookmarksView
import bookmarksView from './views/bookmarksView.js';
// console.log('bookmarksView: ', bookmarksView);

//todo –∏–º–ø–æ—Ä—Ç addRecipeView
import addRecipeView from './views/addRecipeView.js';
// console.log('addRecipeView: ', addRecipeView);

// import icons from '../img/icons.svg'; // parcel 1
//* –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
import icons from 'url:../img/icons.svg'; // parcel 2
// –ø–æ–ª–∏—Ñ–∏–ª–ª –≤—Å–µ
import 'core-js/stable';
// –ø–æ–ª–∏—Ñ–∏–ª –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º
import 'regenerator-runtime/runtime';

import { CLOSE_WINDOW_SEC } from './config.js';

// https://forkify-api.herokuapp.com/v2

/* if (module.hot) {
  module.hot.accept();
} */

// import icons from 'url:../img/icons.svg';

const addRecipeIcon = document.querySelector(
  '.nav__btn-add-recipe > .nav__icon > use'
);
// console.log('searchIcon: ', searchIcon);

function setAttributesImg() {
  addRecipeIcon.setAttribute('href', `${icons}#icon-edit`);
}

// setAttributesImg();

///////////////////////////////////////

//todo –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç
async function controlRecipes() {
  try {
    //* 0 -0 –ø–æ–ª—É—á–∞–µ–º —Ö—ç—à —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const id = window.location.hash.slice(1);
    // console.log('id: ', id);

    if (!id) return;

    //* 0) –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏–Ω–Ω–µ—Ä–∞
    recipeView.renderSpinner();

    //* 0 -a) –æ–±–Ω–æ–≤–ª—è–µ–º resultsView - —á—Ç–æ–±—ã –æ—Ç–º–µ—Ç–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π / –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç
    resultsView.update(model.getSearchResultsPage());

    //* 0 - b) - —Ä–µ–Ω–¥–µ—Ä–∏–º bookmarksView
    bookmarksView.render(model.state.bookmarks);

    //* 1) –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–∞
    await model.loadRecipe(id);

    // const { recipe } = model.state;

    //* 2) - —Ä–µ–Ω–¥–µ—Ä–∏–º —Ä–µ—Ü–µ–ø—Ç
    recipeView.render(model.state.recipe);

    //* 3) - –ª–æ–≤–∏–º –æ—à–±–∫—É
  } catch (error) {
    // alert(error);
    console.error(`${error.message}`);
    // recipeView.renderError(`üí£üí£üí£ ${error}`);
    recipeView.renderError();

    // throw error;
  }
}

// controlRecipes();

//* 1 –≤–∞—Ä
/* window.addEventListener('hashchange', controlRecipes);
window.addEventListener('load', controlRecipes); */

//* 2 –≤–∞—Ä–∏–∞–Ω—Ç
/* ['hashchange', 'load'].forEach((ev) =>
  window.addEventListener(ev, controlRecipes)
); */

//todo —Ñ—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
/* async function controlSearchResultsMy(query) {
  try {
    await model.loadSearchResults(query);
    
    console.log('model.state.search.results: ', model.state.search.results);
  } catch (error) {
    console.error(error);
  }
} */

//todo —Ñ—É–Ω–∫—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
async function controlSearchResults() {
  try {
    //* 0 - —Ä–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏–Ω–Ω–µ—Ä
    resultsView.renderSpinner();

    //* 1 - –ø–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å
    const query = searchView.getQuery();

    if (!query) return;
    // –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ model
    model.state.search.query = query;

    //* 2 - –∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    await model.loadSearchResults(query);

    //* 3 - —Ä–µ–Ω–¥–µ—Ä–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    // console.log('model.state.search.results: ', model.state.search.results);
    // resultsView.renderMy(model.state.search.results);
    // –±–µ–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    // resultsView.render(model.state.search.results);
    resultsView.render(model.getSearchResultsPage());

    //* 4 - –≤—ã–∑—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é render
    paginationView.render(model.state.search);

    // debugger;
  } catch (error) {
    console.error(`üí£üí£üí£ ${error}`);
  }
}

// controlSearchResults();

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
function controlPaginationMy(page) {
  // console.log('page: ', page);

  //* –≤—ã–∑—ã–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ —Ä–µ–Ω–¥–µ—Ä
  resultsView.render(model.getSearchResultsPage(page));

  //–≤—ã–∑—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é render
  paginationView.render(model.state.search);
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
function controlPagination(goToPage) {
  // console.log('Page test');

  // console.log('goToPage: ', goToPage);

  //* —Ä–µ–Ω–¥–µ—Ä–∏–º –Ω–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
  // resultsView.renderMy(model.state.search.results);
  // –±–µ–∑ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  // resultsView.render(model.state.search.results);
  resultsView.render(model.getSearchResultsPage(goToPage));

  //* –≤—ã–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é –ø–∞–≥–∏–Ω–∞—Ü–∏—é render
  paginationView.render(model.state.search);
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞–≤–∞–µ–º—ã—Ö –±–ª—é–¥
function controlServingsMy(btn) {
  // console.log('btn: ', btn);

  let prevServings = model.state.recipe.servings;
  // console.log('prevServings: ', prevServings);

  // let newServings;
  //* –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–∏ —Ä–µ—Ü–µ–ø—Ç–∞ (–≤ state)
  if (btn.classList.contains('btn--descrease-servings') && prevServings !== 1) {
    // newServings = model.state.recipe.servings--;
    // console.log('newServings: ', newServings);

    model.state.recipe.servings--;
  }

  if (btn.classList.contains('btn--increase-servings')) {
    // newServings = model.state.recipe.servings++;
    // console.log('newServings: ', newServings);

    model.state.recipe.servings++;
  }

  // console.log('model.state.recipe.servings: ', model.state.recipe.servings);
  let curServings = model.state.recipe.servings;
  console.log('curServings: ', curServings);

  //* –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏ —Ç–µ–∫—É—â–∏–π —Ä–∞–≤–Ω—ã - –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
  if (prevServings === curServings)
    return console.log(' –Ω–µ –º–µ–Ω—è–µ–º recipeView ');

  //* –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
  updateIngredientsMy(
    model.state.recipe.ingredients,
    curServings / prevServings
  );

  //* –æ–±–Ω–æ–≤–∏—Ç—å view
  recipeView.render(model.state.recipe);
}

function updateIngredientsMy(ingredients, multiplier) {
  /* console.log('ingredients: ', ingredients);
  console.log('multiplier: ', multiplier); */

  ingredients.forEach((ing) => {
    ing.quantity *= multiplier;
  });
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞–≤–∞–µ–º—ã—Ö –±–ª—é–¥
function controlServings(newServings) {
  //* –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç —Å–µ—Ä–∏–≤–∏—Ä–æ–≤–∫–∏ (–≤ state)
  model.updateServings(newServings);

  //* –æ–±–Ω–æ–≤–∏—Ç—å view - –¥–∞–ª–µ–µ –æ–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥
  // recipeView.render(model.state.recipe);
  recipeView.update(model.state.recipe);
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–∫–ª–∞–¥–∫–∏
function controlAddBookmark() {
  //* 1) - –µ—Å–ª–∏ —Ä–µ—Ü–µ–ø—Ç –ù–ï –æ—Ç–º–µ—á–µ–Ω - –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫—É, –∏–Ω–∞—á–µ - —É–¥–∞–ª—è–µ–º
  if (!model.state.recipe.bookmarked) {
    //* –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫—É –≤ model
    model.addBookmark(model.state.recipe);
  } else {
    //* —É–±–∏—Ä–∞–µ–º –∑–∞–∫–ª–∞–¥–∫—É –≤ model
    model.deleteBookmark(model.state.recipe);
  }

  /* console.log('model.state.recipe: ', model.state.recipe);
  console.log('model.state.bookmarks: ', model.state.bookmarks); */

  //* 2) - –æ–±–Ω–æ–≤–ª—è–µ–º recipeView
  recipeView.update(model.state.recipe);

  //* 3) - —Ä–µ–Ω–¥–µ—Ä–∏–º bookmarksView
  bookmarksView.render(model.state.bookmarks);
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –∑–∞–∫–ª–∞–¥–æ–∫
function controlBookmarks() {
  bookmarksView.render(model.state.bookmarks);
}

//todo –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ (–æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã)
async function controlAddRecipe(newRecipe) {
  try {
    //* —Ä–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏–Ω–Ω–µ—Ä
    addRecipeView.renderSpinner();

    console.log('newRecipe: ', newRecipe);

    //* –∑–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ—Ü–µ–ø—Ç
    await model.uploadRecipe(newRecipe);

    console.log('model.state.recipe: ', model.state.recipe);

    //* —Ä–µ–Ω–¥–µ—Ä–∏–º —Ä–µ—Ü–µ–ø—Ç
    recipeView.render(model.state.recipe);

    //* –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    addRecipeView.renderMessage();

    //* —Ä–µ–Ω–¥–µ—Ä–∏–º bookmarkView
    bookmarksView.render(model.state.bookmarks);

    //* –∏–∑–º–µ–Ω—è–µ–º id –≤ url –±—Ä–∞—É–∑–µ—Ä–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º history API - pushState() –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å id –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    //? pushState - –∏–º–µ–µ—Ç 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ - data, title –∏ url
    window.history.pushState(null, null, `#${model.state.recipe.id}`);

    //* –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
    setTimeout(() => {
      addRecipeView.toggleWindow();
    }, CLOSE_WINDOW_SEC * 1000);
  } catch (err) {
    console.error(`üí£üí£üí£ ${err}`);
    addRecipeView.renderError(`${err.message}`);
  }
}

//todo –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function init() {
  //* –≤—ã–∑—ã–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä –∑–∞–∫–ª–∞–¥–æ–∫
  bookmarksView.addHandlerRender(controlBookmarks);

  //* –≤—ã–∑—ã–≤–∞–µ–º controlRecipes
  recipeView.addHandlerRender(controlRecipes);

  //* –≤—ã–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  recipeView.renderMessage();

  //* –≤—ã–∑—ã–≤–∞–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Ä–æ–≤–∫–∏ –∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
  // recipeView.addHandlerUpdateServingsMy(controlServingsMy);

  recipeView.addHandlerUpdateServings(controlServings);

  //* –≤—ã–∑—ã–≤–∞–µ–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∑–∞–∫–ª–∞–¥–∫–∏
  // recipeView.addHandlerAddToBookmarksMy(controlAddBookmark);
  recipeView.addHandlerAddToBookmarks(controlAddBookmark);

  //* –≤—ã–∑—ã–≤–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞ - –º–æ–π –≤–∞—Ä
  // searchView.addHandlerSearchMy(controlSearchResultsMy);
  //* –≤—ã–∑—ã–≤–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
  searchView.addHandlerSearch(controlSearchResults);

  //* –≤—ã–∑—ã–≤–∞–µ–º addHandlerMoveTo –∏–∑ paginationView - —Å–ª—É—à–∞–µ–º –∫–ª–∏–∫–∏ –Ω–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏—é
  paginationView.addHandlerMoveToMy(controlPaginationMy);
  // paginationView.addHandlerClick(controlPagination);

  //* –≤—ã–∑—ã–≤–∞–µ–º addHandlerUpload –∏–∑ addRecipeView
  addRecipeView.addHandlerUpload(controlAddRecipe);
}

init();
